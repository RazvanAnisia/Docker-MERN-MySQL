version: '3.7'

networks:
  mern:

volumes:
  data-db:
    driver: local

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-webserver
    ports:
      - '8080:80'
    volumes:
      - ./code/frontend/build:/var/www/htmlp
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node
      - mysql
      - react
    networks:
      - mern

  mysql:
    image: mysql:5.7
    container_name: mysql-db
    restart: unless-stopped
    tty: true
    ports:
      - '4306:3306'
    volumes:
      - data-db:/var/lib/mysql
    env_file:
      - ./config/db/.env
    networks:
      - mern

  node:
    build:
      context: ./code/api
      dockerfile: Dockerfile
    container_name: node-app
    command: /usr/src/app/node_modules/.bin/nodemon server.js
    volumes:
      - ./code/api:/usr/src/app
    environment:
      DB_HOST: mysql-db
      PORT: 9000
      SOCKET_PORT: 9008
    env_file:
      - ./config/server/.env
    ports:
      - '9000:9000'
      - '9008:9008'
    networks:
      - mern

  react:
    build:
      context: ./code/frontend
      dockerfile: Dockerfile
    container_name: frontend
    command: npm start
    volumes:
      - ./code/frontend:/usr/src/app
    environment:
      - REACT_APP_BASE_URL=http://localhost:9000
      - REACT_APP_SOCKET_PORT=http://localhost:9008
    ports:
      - '3000:3000'
    networks:
      - mern
